applicationName: CWDS CALS API
version: ${APP_VERSION:-local}

server:
  applicationConnectors:
  - type: http
    port: 8090
  - type: https
    port: 8433
    keyStorePath: ${KEY_STORE_FILE:-./config/testKeyStore.jks}
    keyStorePassword: ${KEY_STORE_PASSWORD:-testPass}
    keyStoreType: JKS
    supportedProtocols: [TLSv1, TLSv1.1, TLSv1.2]
  adminConnectors:
  - type: http
    port: 9091

shiro:
 iniConfigs: ["classpath:test-shiro.ini"]

swagger:
  templateName: swagger.mustache
  assetsPath: /static
  resourcePackage: gov.ca.cwds.cals.web.rest
  title: CWDS CALC API
  description: RESTful API definitions for the CWS New System.
  logo: images/CWDS-API-Logo-Horizontal.png
  loginUrl: ${LOGIN_URL:-http://localhost:8090/authn/login}
  showSwagger: ${SHOW_SWAGGER:-true}

upgardeDbOnStart: ${UPGRADE_DB_ON_START:-false}

dmsURI: ${DMS_URI:-http://cals-api.dev.cwds.io:8086}

fasDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:fas;INIT=create schema if not exists fas\;set schema fas
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_NS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_NS_CP_MIN_SIZE:-2}
  maxSize: ${DB_NS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: false

cmsDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:cwscms;INIT=create schema if not exists cwscms\;set schema cwscms
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_CMS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_CMS_CP_MIN_SIZE:-2}
  maxSize: ${DB_CMS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.default_schema: cwscms
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: false

cmsRsDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:cwscmsrs;INIT=create schema if not exists cwscmsrs\;set schema cwscmsrs
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_CMS_RS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_CMS_RS_CP_MIN_SIZE:-2}
  maxSize: ${DB_CMS_RS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.default_schema: cwscmsrs
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: false

xaCmsDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  xaDataSourceClassName: org.h2.jdbcx.JdbcDataSource
  url: jdbc:h2:mem:cwscms;INIT=create schema if not exists cwscms\;set schema cwscms
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_CMS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_CMS_CP_MIN_SIZE:-2}
  maxSize: ${DB_CMS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.default_schema: cwscms
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: false

      hibernate.current_session_context_class: jta
      hibernate.transaction.jta.platform: com.atomikos.icatch.jta.hibernate4.AtomikosPlatform
      hibernate.transaction.factory_class: org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl
      connection.release_mode: auto
  xaProperties:
       url: jdbc:h2:mem:cwscms;INIT=create schema if not exists cwscms\;set schema cwscms

lisDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:lis;INIT=create schema if not exists lis\;set schema lis
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_LIS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_LIS_CP_MIN_SIZE:-2}
  maxSize: ${DB_LIS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: org.hibernate.dialect.H2Dialect
      hibernate.default_schema: lis
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: false

calsnsDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  url: jdbc:h2:mem:calsns;INIT=create schema if not exists calsns\;set schema calsns
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_NS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_NS_CP_MIN_SIZE:-2}
  maxSize: ${DB_NS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: gov.ca.cwds.cals.persistence.hibernate.dialect.JsonbSupportH2Dialect
      #hibernate.default_schema: CALSNS
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: false
      hibernate.cache.use_second_level_cache: true
      hibernate.cache.region.factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
      hibernate.cache.use_query_cache: true
      
xaCalsnsDataSourceFactory:
  driverClass: org.h2.Driver
  user: sa
  password:
  xaDataSourceClassName: org.h2.jdbcx.JdbcDataSource
  url: jdbc:h2:mem:calsns;INIT=create schema if not exists calsns\;set schema calsns
  validationQuery: "/* MyService Health Check */ SELECT 1"
  logValidationErrors: true
  initialSize: ${DB_NS_CP_INITIAL_SIZE:-2}
  minSize: ${DB_NS_CP_MIN_SIZE:-2}
  maxSize: ${DB_NS_CP_MAX_SIZE:-8}
  minIdleTime: 1 minute
  properties:
      hibernate.dialect: gov.ca.cwds.cals.persistence.hibernate.dialect.JsonbSupportH2Dialect
      #hibernate.default_schema: CALSNS
      hibernate.id.new_generator_mappings: false
      hibernate.show_sql: false
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.region.factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
      hibernate.cache.use_query_cache: false

      hibernate.current_session_context_class: jta
      hibernate.transaction.jta.platform: com.atomikos.icatch.jta.hibernate4.AtomikosPlatform
      hibernate.transaction.factory_class: org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl
      connection.release_mode: auto
  xaProperties:
      url: jdbc:h2:mem:calsns;INIT=create schema if not exists calsns\;set schema calsns

webSecurity:
  httpResponseSecurityHeaders:
    # Prevent MIMI sniffing
    X-Content-Type-Options: nosniff

    # Prevent click-jacking
    X-Frame-Options: deny

    # Prevent cross site scripting
    X-XSS-Protection: 1; mode=block

    # Prevent everything other than same origin
    Content-Security-Policy: default-src 'self' 'unsafe-inline';

logging:
  level: ${LOGLEVEL:-INFO}
  loggers:
    "org.hibernate.SQL":
      level: INFO
    "org.hibernate.type.descriptor.sql":
      level: INFO
    "AUDIT":
      level: ALL
    "gov.ca.cwds":
      level: DEBUG
  appenders:
    - type: console
      threshold: INFO
      timeZone: UTC
      target: stdout
      logFormat: '[%X{remoteAddress}] [%date{ISO8601}] [%level] [%thread] [%X{uniqueId}] [%logger:] [%message]%n'