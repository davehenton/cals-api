import gov.ca.cwds.cals.persistence.model.calsns.rfa.*
import gov.ca.cwds.cals.service.dto.rfa.*
import gov.ca.cwds.cals.Constants
import gov.ca.cwds.cals.Constants.Validation.Business.Code
import gov.ca.cwds.rest.exception.IssueDetails

global java.util.Set validationDetailsList

rule "Check Applicant names for duplication"
      dialect "mvel"
  agenda-group "applicant-names-duplication-validation"
  when
      $form : RFA1aForm()
      $firstApplicant: RFA1aApplicant() from $form.applicants
      $secondApplicant: RFA1aApplicant(this != $firstApplicant) from $form.applicants
      $firstApplicantDTO: ApplicantDTO() from $firstApplicant.applicant
      ApplicantDTO(
       firstName == $firstApplicantDTO.firstName,
       lastName == $firstApplicantDTO.lastName,
       nameSuffix == $firstApplicantDTO.nameSuffix) from $secondApplicant.applicant
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Code.APPLICANT_NAMES_DUPLICATION);
    details.setUserMessage(String.format(Constants.Validation.Business.APPLICANT_NAMES_DUPLICATION_MESSAGE,
       $firstApplicantDTO.getFirstName() != null ? $firstApplicantDTO.getFirstName() : "",
       $firstApplicantDTO.getLastName() != null ? $firstApplicantDTO.getLastName() : "",
       $firstApplicantDTO.getNameSuffix() != null ? $firstApplicantDTO.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(Constants.BusinessRulesAgendaGroups.APPLICANT_NAMES_DUPLICATION_VALIDATION);
    validationDetailsList.add(details);
end