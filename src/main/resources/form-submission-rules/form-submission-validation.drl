import gov.ca.cwds.cals.persistence.model.calsns.dictionaries.AddressType
import gov.ca.cwds.cals.persistence.model.calsns.dictionaries.CountyType
import gov.ca.cwds.cals.persistence.model.calsns.dictionaries.StateType
import gov.ca.cwds.cals.service.dto.rfa.RFA1aFormDTO
import gov.ca.cwds.cals.service.dto.rfa.ResidenceDTO
import gov.ca.cwds.cals.service.dto.rfa.RFAAddressDTO
import gov.ca.cwds.cals.service.dto.rfa.ApplicantDTO
import gov.ca.cwds.cals.service.dto.rfa.RFA1bFormDTO
import gov.ca.cwds.cals.service.dto.rfa.OtherAdultDTO
import gov.ca.cwds.cals.service.dto.rfa.ApplicantsHistoryDTO
import gov.ca.cwds.cals.service.dto.rfa.RelationshipToApplicantDTO
import gov.ca.cwds.cals.persistence.model.calsns.dictionaries.RelationshipToApplicantType
import gov.ca.cwds.cals.service.dto.rfa.MinorChildDTO
import gov.ca.cwds.cals.service.dto.rfa.AdultChildDTO
import gov.ca.cwds.cals.util.Utils
import gov.ca.cwds.cals.Constants
import gov.ca.cwds.cals.Constants.Validation
import gov.ca.cwds.cals.Constants.Validation.Business
import gov.ca.cwds.cals.Constants.BusinessRulesAgendaGroups
import gov.ca.cwds.cals.Constants.AddressTypes
import org.apache.commons.lang3.StringUtils
import gov.ca.cwds.rest.exception.IssueDetails
import gov.ca.cwds.rest.exception.IssueType

global java.util.Set validationDetailsList;

rule "Validate that applicant exists"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    not ApplicantDTO() from $form.applicants;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.APPLICATION_HAS_NO_APPLICANT);
    details.setUserMessage(Validation.Business.APPLICATION_HAS_NO_APPLICANT_MESSAGE);
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that applicant has RFA1b form"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $applicant: ApplicantDTO() from $form.applicants;
    not RFA1bFormDTO() from $applicant.rfa1bForm;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.APPLICANT_HAS_NO_RFA1B_FORM);
    details.setUserMessage(String.format(Validation.Business.APPLICANT_HAS_NO_RFA1B_FORM_MESSAGE,
        $applicant.getFirstName() != null ? $applicant.getFirstName() : "",
        $applicant.getLastName() != null ? $applicant.getLastName() : "",
        $applicant.getNameSuffix() != null ? $applicant.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that other adult has reference to applicant"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $otherAdult: OtherAdultDTO() from $form.otherAdults;
    $relationship: RelationshipToApplicantDTO() from $otherAdult.relationshipToApplicants;
    not ApplicantDTO(id == $relationship.applicantId) from $form.applicants;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.OTHER_ADULT_HAS_NO_REFERENCE_TO_APPLICANT);
    details.setUserMessage(String.format(Validation.Business.OTHER_ADULT_HAS_NO_REFERENCE_TO_APPLICANT_MESSAGE,
        $otherAdult.getFirstName() != null ? $otherAdult.getFirstName() : "",
        $otherAdult.getLastName() != null ? $otherAdult.getLastName() : "",
        $otherAdult.getNameSuffix() != null ? $otherAdult.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that other adult has first name"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $otherAdult: OtherAdultDTO(!relationshipToApplicants.isEmpty()) from $form.otherAdults;
    eval(StringUtils.isBlank($otherAdult.getFirstName()))
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.OTHER_ADULT_HAS_NO_FIRST_NAME);
    details.setUserMessage(String.format(Validation.Business.OTHER_ADULT_HAS_NO_FIRST_NAME_MESSAGE,
        $otherAdult.getFirstName() != null ? $otherAdult.getFirstName() : "",
        $otherAdult.getLastName() != null ? $otherAdult.getLastName() : "",
        $otherAdult.getNameSuffix() != null ? $otherAdult.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that other adult has last name"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $otherAdult: OtherAdultDTO(!relationshipToApplicants.isEmpty()) from $form.otherAdults;
    eval(StringUtils.isBlank($otherAdult.getLastName()))
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.OTHER_ADULT_HAS_NO_LAST_NAME);
    details.setUserMessage(String.format(Validation.Business.OTHER_ADULT_HAS_NO_LAST_NAME_MESSAGE,
        $otherAdult.getFirstName() != null ? $otherAdult.getFirstName() : "",
        $otherAdult.getLastName() != null ? $otherAdult.getLastName() : "",
        $otherAdult.getNameSuffix() != null ? $otherAdult.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that other adult has date of birth"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $otherAdult: OtherAdultDTO(!relationshipToApplicants.isEmpty(), dateOfBirth == null) from $form.otherAdults;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Business.Code.OTHER_ADULT_HAS_NO_DATE_OF_BIRTH);
    details.setUserMessage(String.format(Business.OTHER_ADULT_HAS_NO_DATE_OF_BIRTH_MESSAGE,
        $otherAdult.getFirstName() != null ? $otherAdult.getFirstName() : "",
        $otherAdult.getLastName() != null ? $otherAdult.getLastName() : "",
        $otherAdult.getNameSuffix() != null ? $otherAdult.getNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that minor child has reference to applicant"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $minorChild: MinorChildDTO() from $form.minorChildren;
    $relationship: RelationshipToApplicantDTO() from $minorChild.relationshipToApplicants;
    not ApplicantDTO(id == $relationship.applicantId) from $form.applicants;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.MINOR_CHILD_HAS_NO_REFERENCE_TO_APPLICANT);
    details.setUserMessage(String.format(Validation.Business.MINOR_CHILD_HAS_NO_REFERENCE_TO_APPLICANT_MESSAGE,
        $minorChild.getOtherRelativeFirstName() != null ? $minorChild.getOtherRelativeFirstName() : "",
        $minorChild.getOtherRelativeLastName() != null ? $minorChild.getOtherRelativeLastName() : "",
        $minorChild.getOtherRelativeNameSuffix() != null ? $minorChild.getOtherRelativeNameSuffix().getValue() : ""));
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that residence exists"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    not ResidenceDTO() from $form.residence;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.APPLICATION_HAS_NO_RESIDENCE);
    details.setUserMessage(Validation.Business.APPLICATION_HAS_NO_RESIDENCE_MESSAGE);
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end

rule "Validate that residential address exists"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    $residence: ResidenceDTO() from $form.residence;
    not RFAAddressDTO(type != null && type.value == AddressTypes.RESIDENTIAL) from $residence.addresses;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.APPLICATION_HAS_NO_RESIDENTIAL_ADDRESS);
    details.setUserMessage(Validation.Business.APPLICATION_HAS_NO_RESIDENTIAL_ADDRESS_MESSAGE);
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end


rule "Validate that application has county"
      dialect "mvel"
  agenda-group "form-submission-validation"
  when
    $form : RFA1aFormDTO();
    not CountyType() from $form.applicationCounty;
  then
    IssueDetails details = new IssueDetails();
    details.setCode(Validation.Business.Code.APPLICATION_HAS_NO_COUNTY);
    details.setUserMessage(Validation.Business.APPLICATION_HAS_NO_COUNTY_MESSAGE);
    details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
    validationDetailsList.add(details);
end


rule "Other Adult is not added as Adult Children"
  dialect "mvel"
  agenda-group "form-submission-validation"
  when
      $form: RFA1aFormDTO()
      $applicantsHistory: ApplicantsHistoryDTO() from $form.applicantsHistory
      $otherAdult: OtherAdultDTO() from $form.otherAdults
      $relationship: RelationshipToApplicantDTO() from $otherAdult.relationshipToApplicants
      $relationshipToApplicantType: RelationshipToApplicantType(value == "Child" ) from $relationship.relationshipToApplicantType
      not AdultChildDTO(livesInHome == true, firstName == $otherAdult.firstName, lastName == $otherAdult.lastName) from $applicantsHistory.adultChildren
  then
      IssueDetails details = new IssueDetails();
      details.setCode(Validation.Business.Code.OTHER_ADULT_IS_NOT_ADDED_AS_ADULT_CHILD);
      details.setUserMessage(String.format(Validation.Business.OTHER_ADULT_IS_NOT_ADDED_AS_A_CHILD,
       $otherAdult.firstName, $otherAdult.lastName));
      details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
      validationDetailsList.add(details);
end

rule "Adult Child living in home is not added as Other Adult"
  dialect "mvel"
  agenda-group "form-submission-validation"
  when
      $form: RFA1aFormDTO()
      $applicantsHistory: ApplicantsHistoryDTO() from $form.applicantsHistory
      $adultChild: AdultChildDTO(livesInHome == true) from $applicantsHistory.adultChildren
      not OtherAdultDTO(firstName == $adultChild.firstName, lastName == $adultChild.lastName) from $form.otherAdults
  then
      IssueDetails details = new IssueDetails();
      details.setCode(Validation.Business.Code.ADULT_CHILD_LIVING_IN_HOME_IS_NOT_ADDED_AS_OTHER_ADULT);
      details.setUserMessage(String.format(Validation.Business.ADULT_CHILD_LIVING_IN_HOME_IS_NOT_ADDED_AS_OTHER_ADULT,
      $adultChild.firstName, $adultChild.lastName));
      details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
      validationDetailsList.add(details);
end

rule "Other Adult is a Child but not living in home as Adult Child"
  dialect "mvel"
  agenda-group "form-submission-validation"
  when
      $form: RFA1aFormDTO()
      $applicantsHistory: ApplicantsHistoryDTO() from $form.applicantsHistory
      $adultChild: AdultChildDTO(livesInHome == false) from $applicantsHistory.adultChildren
      OtherAdultDTO(firstName == $adultChild.firstName, lastName == $adultChild.lastName) from $form.otherAdults
  then
      IssueDetails details = new IssueDetails();
      details.setCode(Validation.Business.Code.ADULT_CHILD_LIVING_IN_HOME_WRONG_FLAG);
      details.setUserMessage(String.format(Validation.Business.ADULT_CHILD_WRONG_LIVING_IN_HOME_FLAG,
      $adultChild.firstName, $adultChild.lastName));
      details.setTechnicalMessage(BusinessRulesAgendaGroups.FORM_SUBMISSION_VALIDATION);
      validationDetailsList.add(details);
end

